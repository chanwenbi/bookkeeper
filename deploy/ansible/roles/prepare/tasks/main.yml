---

- name: Check Ansible version
  assert:
    that:
      - ansible_version.full | version_compare('2.4.2', '>=')

- name: Create directories to prepare the deployment
  file:
    path="{{ item }}"
    state=directory
    mode=0755
  with_items:
  - "{{ deployment_dir }}"
  - "{{ downloads_dir }}"
  - "{{ conf_dir }}"
  - "{{ resources_dir }}"
  - "{{ binary_dir }}"

- name: Create packages.yml
  template:
    src=bookkeeper_packages.yml.j2
    dest={{ conf_dir }}/bookkeeper_packages.yml

- name: Create specific deployment method packages.yml
  template:
    src=3rdparty_{{ deployment_method }}_packages.yml.j2
    dest={{ conf_dir }}/3rdparty_{{ deployment_method }}_packages.yml

- include_vars: file={{ conf_dir }}/bookkeeper_packages.yml 

- include_vars: file={{ conf_dir }}/3rdparty_{{ deployment_method }}_packages.yml

- name: Detect outbound network
  shell: >
    warn=no
    curl -s --connect-timeout 10 google.com 2>/dev/null >/dev/null; echo $?
  changed_when: false
  register: outbound_network_st

- name: Set outbound network fact
  set_fact: has_outbound_network={{ outbound_network_st.stdout.strip() == '0' }}

- fail:
    msg: "The control machine must have access to the internet in order to download bookkeeper and related packages."
  when: not has_outbound_network

- name: Download bookkeeper package
  get_url:
    url: "{{ item.url }}"
    dest: "{{ downloads_dir }}/{{ item.name }}-{{ item.version }}.tar.gz"
    checksum: "{{ item.checksum | default(omit) }}"
    force: yes
    validate_certs: no
  register: get_url_result
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  with_items: "{{ bookkeeper_packages }}"
  when: has_outbound_network

- include_tasks: "3rdparty_{{ deployment_method }}_deployment.yml"
